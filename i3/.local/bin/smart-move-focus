#!/bin/bash

# taken from: https://gist.github.com/mijoharas/b9d09daed9654ca8d0d081015209ecd0
# requires: jq

function get-focused-window()
{
    i3-msg -t get_tree | jq -r ".. | select(.focused? == true).window_properties.class"
}

function i3-move()
{
    i3-msg focus "$1"
}

function emacs-move()
{
    emacsclient -e "(evil-window-$1 1)"
}

function tmux-or-vim-move()
{

  case "$1" in
     "up")
       coord='top'
       dirLetter='D'
       vimLetter='k'
       op='<='
     ;;
     "down")
       coord='bottom'
       dirLetter='D'
       vimLetter='j'
       op='>='
     ;;
     "left")
       coord='left'
       dirLetter='L'
       vimLetter='h'
       op='<='
     ;;
     "right")
       coord='right'
       dirLetter='R'
       vimLetter='l'
       op='>='
     ;;
  esac

  cmd="#{pane_id}:#{pane_tty}:#{pane_$coord}:#{?pane_active,_active_,_no_}"
  panes=$(tmux list-panes -F "$cmd")

  active_pane=$(echo "$panes" | grep _active_)
  active_pane_id=$(echo "$active_pane" | cut -d: -f1)
  active_pane_tty=$(echo "$active_pane" | cut -d: -f2)
  active_coord=$(echo "$active_pane" | cut -d: -f3)
  coords=$(echo "$panes" | cut -d: -f3)

  if [ "$op" == ">=" ]; then
    test_coord=$(echo "$coords" | sort -nr | head -n1)
    at_edge=$(( active_coord >= test_coord ? 1 : 0 ))
  else
    test_coord=$(echo "$coords" | sort -n | head -n1)
    at_edge=$(( active_coord <= test_coord ? 1 : 0 ))
  fi;

  procs=$(ps -o state= -o comm= -t $active_pane_tty)
  is_vim=$(echo "$procs" | grep -cE 'S n?vim')

  if [ $is_vim -ge 1 ]; then
    if [ $at_edge == 0 ]; then
      echo "passing keys to vim, falling back to tmux pane switch" >> ~/tmp/errors
      tmux send-keys "C-$vimLetter"
    else
      echo "passing keys to vim, falling back to i3 switch" >> ~/tmp/errors
      tmux send-keys "M-$vimLetter"
    fi;
  elif [ $at_edge == 0 ]; then
      echo "not at an edge, moving tmux focus" >> ~/tmp/errors
      tmux select-pane -$dirLetter
  else
      echo "falling back to i3 move" >> ~/tmp/errors
      i3-move "$1"
  fi;
}

function browser-move-tab ()
{
    # TODO how to know if tab is first or last?
    # TODO handle chrome
    if [ "$1" == "left" ]; then
        xdotool key --window $(xdotool search --name "Mozilla Firefox" | head -1) control+Tab
    elif [ "$1" == "right" ]; then
        xdotool key --window $(xdotool search --name "Mozilla Firefox" | head -1) control+Shift+Tab
    fi;
}


function perform-move()
{
    focused_window=$(get-focused-window)
    echo "$focused_window is focused" >> ~/tmp/errors
    if [ "$focused_window" = "Emacs" ]; then
        emacs-move "$1"
        result=$?
        if [ $result -ne 0 ]; then
            i3-move "$1"
        fi
    elif [ "$focused_window" = "Xfce4-terminal" ]; then
        echo "Firing Terminal movement" >> ~/tmp/errors
        tmux-or-vim-move "$1"
        result=$?
        if [ $result -ne 0 ]; then
            i3-move "$1"
        fi
    else
        i3-move "$1"
    fi
}

echo "movement detected: -------" >> ~/tmp/errors

case "$1" in
    left) ;&
    right) ;&
    up) ;&
    down)
        perform-move "$1";;
    *) echo "command not found";;
esac

